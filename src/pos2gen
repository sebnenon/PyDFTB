#!/usr/bin/env python
# -*- coding: utf-8 -*-
#############################################
#                                           #
#            pbcmodif                       #
#              S.Nenon 2013                 #
#                                           #
#############################################

from dftb.genClass import genFile
import argparse
import numpy as np

def writeGen(outname,atomlist,lattice,geometry,isPeriodic):
    redatlist=[]
    for i in atomlist:
        if i not in redatlist:
            redatlist.append(i)
    atomline = ''
    for i in redatlist:
        atomline +=i.rjust(3)
    with open(outname,'w') as fout:
        if isPeriodic:
            fout.write('%5d  S\n'%len(atomlist))
        else:
            fout.write('%5d  C\n'%len(atomlist))
        fout.write(atomline+'\n')
        for i in range(len(atomlist)):
            try:
                fout.write('%5d%2d %19.10E %19.10E %19.10E\n'%(int(geometry[i][0]),redatlist.index(geometry[i][1])+1,geometry[i][2],geometry[i][3],geometry[i][4]))
            except:
                print geometry[i]
        if isPeriodic:
            fout.write('%20.10E %19.10E %19.10E\n'%(0.0,0.0,0.0))
            for i in range(3):  
                fout.write('%20.10E %19.10E %19.10E\n'%(lattice[i][0],lattice[i][1],lattice[i][2]))
    print(outname+' written')

if __name__ == '__main__':
    #parse args
    parser = argparse.ArgumentParser(description="Converts a POSCAR to .gen")
    parser.add_argument('filein_name', type=str, help="File to convert to .gen")
    args = parser.parse_args()
    # get geometry
    with open(args.filein_name,'r') as tmp:
        lattice = []
        content=tmp.readlines()
        for i in content[2:5]:
            lattice.append([float(x) for x in i.strip().split()]) 
        lattmat=np.array(lattice)
        # get atoms list
        atoms = zip([int(x) for x in content[6].strip().split()],content[5].strip().split())
        atomstr=''
        for i in atoms:
            atomstr+=i[0]*i[1]
        atomlist=list(atomstr)
        cpt=0
        geom=[]
        for i in content[8:]:
            if not i.strip():break
            try:
                float(i.strip().split()[0])
            except:
                continue
            geom.append([str(cpt+1),atomlist[cpt]])
            geom[cpt].extend(np.dot([float(x) for x in i.strip().split()[:3]],lattmat))
            cpt += 1
    writeGen('{0}.gen'.format(args.filein_name.split('.')[0]),atomlist,lattice,geom,True)
